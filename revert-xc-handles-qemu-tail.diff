diff -r ce2dc53162ba tools/libxc/xc_domain_restore.c
--- a/tools/libxc/xc_domain_restore.c	Mon Feb 28 19:02:29 2011 +0000
+++ b/tools/libxc/xc_domain_restore.c	Mon Feb 28 19:06:15 2011 +0000
@@ -343,118 +343,6 @@
     } u;
 } tailbuf_t;
 
-/* read stream until EOF, growing buffer as necssary */
-static int compat_buffer_qemu(xc_interface *xch, struct restore_ctx *ctx,
-                              int fd, struct tailbuf_hvm *buf)
-{
-    uint8_t *qbuf, *tmp;
-    int blen = 0, dlen = 0;
-    int rc;
-
-    /* currently save records tend to be about 7K */
-    blen = 8192;
-    if ( !(qbuf = malloc(blen)) ) {
-        ERROR("Error allocating QEMU buffer");
-        return -1;
-    }
-
-    while( (rc = read(fd, qbuf+dlen, blen-dlen)) > 0 ) {
-        DPRINTF("Read %d bytes of QEMU data\n", rc);
-        dlen += rc;
-
-        if (dlen == blen) {
-            DPRINTF("%d-byte QEMU buffer full, reallocating...\n", dlen);
-            blen += 4096;
-            tmp = realloc(qbuf, blen);
-            if ( !tmp ) {
-                ERROR("Error growing QEMU buffer to %d bytes", blen);
-                free(qbuf);
-                return -1;
-            }
-            qbuf = tmp;
-        }
-    }
-
-    if ( rc < 0 ) {
-        ERROR("Error reading QEMU data");
-        free(qbuf);
-        return -1;
-    }
-
-    if ( memcmp(qbuf, "QEVM", 4) ) {
-        ERROR("Invalid QEMU magic: 0x%08x", *(unsigned long*)qbuf);
-        free(qbuf);
-        return -1;
-    }
-
-    buf->qemubuf = qbuf;
-    buf->qemubufsize = dlen;
-
-    return 0;
-}
-
-static int buffer_qemu(xc_interface *xch, struct restore_ctx *ctx,
-                       int fd, struct tailbuf_hvm *buf)
-{
-    uint32_t qlen;
-    uint8_t *tmp;
-
-    if ( RDEXACT(fd, &qlen, sizeof(qlen)) ) {
-        PERROR("Error reading QEMU header length");
-        return -1;
-    }
-
-    if ( qlen > buf->qemubufsize ) {
-        if ( buf->qemubuf) {
-            tmp = realloc(buf->qemubuf, qlen);
-            if ( tmp )
-                buf->qemubuf = tmp;
-            else {
-                ERROR("Error reallocating QEMU state buffer");
-                return -1;
-            }
-        } else {
-            buf->qemubuf = malloc(qlen);
-            if ( !buf->qemubuf ) {
-                ERROR("Error allocating QEMU state buffer");
-                return -1;
-            }
-        }
-    }
-    buf->qemubufsize = qlen;
-
-    if ( RDEXACT(fd, buf->qemubuf, buf->qemubufsize) ) {
-        PERROR("Error reading QEMU state");
-        return -1;
-    }
-
-    return 0;
-}
-
-static int dump_qemu(xc_interface *xch, uint32_t dom, struct tailbuf_hvm *buf)
-{
-    int saved_errno;
-    char path[256];
-    FILE *fp;
-
-    sprintf(path, XC_DEVICE_MODEL_RESTORE_FILE".%u", dom);
-    fp = fopen(path, "wb");
-    if ( !fp )
-        return -1;
-
-    DPRINTF("Writing %d bytes of QEMU data\n", buf->qemubufsize);
-    if ( fwrite(buf->qemubuf, 1, buf->qemubufsize, fp) != buf->qemubufsize) {
-        saved_errno = errno;
-        fclose(fp);
-        errno = saved_errno;
-        return -1;
-    }
-
-    fclose(fp);
-
-    return 0;
-}
-
 static int buffer_tail_hvm(xc_interface *xch, struct restore_ctx *ctx,
                            struct tailbuf_hvm *buf, int fd,
                            unsigned int max_vcpu_id, uint64_t vcpumap,
@@ -462,7 +350,6 @@
                            int vcpuextstate, uint32_t vcpuextstate_size)
 {
     uint8_t *tmp;
-    unsigned char qemusig[21];
 
     if ( RDEXACT(fd, buf->magicpfns, sizeof(buf->magicpfns)) ) {
         PERROR("Error reading magic PFNs");
@@ -499,28 +386,7 @@
         return -1;
     }
 
-    if ( RDEXACT(fd, qemusig, sizeof(qemusig)) ) {
-        PERROR("Error reading QEMU signature");
-        return -1;
-    }
-
-    /* The legacy live-migration QEMU record has no length information.
-     * Short of reimplementing the QEMU parser, we're forced to just read
-     * until EOF.
-     *
-     * Gets around this by sending a different signatures for the new
-     * live-migration QEMU record and Remus which includes a length
-     * prefix
-     */
-    if ( !memcmp(qemusig, "QemuDeviceModelRecord", sizeof(qemusig)) )
-        return compat_buffer_qemu(xch, ctx, fd, buf);
-    else if ( !memcmp(qemusig, "DeviceModelRecord0002", sizeof(qemusig)) ||
-              !memcmp(qemusig, "RemusDeviceModelState", sizeof(qemusig)) )
-        return buffer_qemu(xch, ctx, fd, buf);
-
-    qemusig[20] = '\0';
-    ERROR("Invalid QEMU signature: %s", qemusig);
-    return -1;
+    return 0;
 }
 
 static int buffer_tail_pv(xc_interface *xch, struct restore_ctx *ctx,
@@ -1805,12 +1671,6 @@
     goto out;
 
   finish_hvm:
-    /* Dump the QEMU state to a state file for QEMU to load */
-    if ( dump_qemu(xch, dom, &tailbuf.u.hvm) ) {
-        PERROR("Error dumping QEMU state to file");
-        goto out;
-    }
-
     /* These comms pages need to be zeroed at the start of day */
     if ( xc_clear_domain_page(xch, dom, tailbuf.u.hvm.magicpfns[0]) ||
          xc_clear_domain_page(xch, dom, tailbuf.u.hvm.magicpfns[1]) ||
