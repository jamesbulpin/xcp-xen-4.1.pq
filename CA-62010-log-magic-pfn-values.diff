diff -r f5c5ac073d00 tools/libxc/xc_domain_restore.c
--- a/tools/libxc/xc_domain_restore.c	Mon Jul 25 17:31:41 2011 +0100
+++ b/tools/libxc/xc_domain_restore.c	Tue Jul 26 15:59:06 2011 +0100
@@ -361,6 +361,10 @@ static int buffer_tail_hvm(xc_interface 
         return -1;
     }
 
+    DPRINTF("xc_domain_restore: magicpfn 0 0x%lx\n", (unsigned long)buf->magicpfns[0]);
+    DPRINTF("xc_domain_restore: magicpfn 1 0x%lx\n", (unsigned long)buf->magicpfns[1]);
+    DPRINTF("xc_domain_restore: magicpfn 2 0x%lx\n", (unsigned long)buf->magicpfns[2]);
+    
     if ( RDEXACT(fd, &buf->reclen, sizeof(buf->reclen)) ) {
         PERROR("Error reading HVM params size");
         return -1;
@@ -1771,6 +1775,7 @@ int xc_domain_restore(xc_interface *xch,
 
   finish_hvm:
     /* These comms pages need to be zeroed at the start of day */
+#if 0
     if ( xc_clear_domain_page(xch, dom, tailbuf.u.hvm.magicpfns[0]) ||
          xc_clear_domain_page(xch, dom, tailbuf.u.hvm.magicpfns[1]) ||
          xc_clear_domain_page(xch, dom, tailbuf.u.hvm.magicpfns[2]) )
@@ -1778,6 +1783,23 @@ int xc_domain_restore(xc_interface *xch,
         PERROR("error zeroing magic pages");
         goto out;
     }
+#else
+    if ( xc_clear_domain_page(xch, dom, tailbuf.u.hvm.magicpfns[0]) )
+    {
+        PERROR("error zeroing magicpfn 0 %lx", tailbuf.u.hvm.magicpfns[0]);
+        goto out;
+    }
+    if ( xc_clear_domain_page(xch, dom, tailbuf.u.hvm.magicpfns[1]) )
+    {
+        PERROR("error zeroing magicpfn 1 %lx", tailbuf.u.hvm.magicpfns[1]);
+        goto out;
+    }
+    if ( xc_clear_domain_page(xch, dom, tailbuf.u.hvm.magicpfns[2]) )
+    {
+        PERROR("error zeroing magicpfn 2 %lx", tailbuf.u.hvm.magicpfns[2]);
+        goto out;
+    }
+#endif
 
     if ( (frc = xc_set_hvm_param(xch, dom,
                                  HVM_PARAM_IOREQ_PFN, tailbuf.u.hvm.magicpfns[0]))
diff -r f5c5ac073d00 tools/libxc/xc_domain_save.c
--- a/tools/libxc/xc_domain_save.c	Mon Jul 25 17:31:41 2011 +0100
+++ b/tools/libxc/xc_domain_save.c	Tue Jul 26 15:59:06 2011 +0100
@@ -1697,6 +1697,11 @@ int xc_domain_save(xc_interface *xch, in
                          (unsigned long *)&magic_pfns[1]);
         xc_get_hvm_param(xch, dom, HVM_PARAM_STORE_PFN,
                          (unsigned long *)&magic_pfns[2]);
+
+        DPRINTF("xc_domain_save: magicpfn 0 0x%lx\n", (unsigned long)magic_pfns[0]);
+        DPRINTF("xc_domain_save: magicpfn 1 0x%lx\n", (unsigned long)magic_pfns[1]);
+        DPRINTF("xc_domain_save: magicpfn 2 0x%lx\n", (unsigned long)magic_pfns[2]);
+
         if ( wrexact(io_fd, magic_pfns, sizeof(magic_pfns)) )
         {
             PERROR("Error when writing to state file (7)");
diff -r f5c5ac073d00 tools/libxc/xc_private.c
--- a/tools/libxc/xc_private.c	Mon Jul 25 17:31:41 2011 +0100
+++ b/tools/libxc/xc_private.c	Tue Jul 26 15:59:06 2011 +0100
@@ -777,7 +777,11 @@ int xc_clear_domain_page(xc_interface *x
     void *vaddr = xc_map_foreign_range(
         xch, domid, PAGE_SIZE, PROT_WRITE, dst_pfn);
     if ( vaddr == NULL )
+    {
+        PERROR("xc_clear_domain_page: Unable to map d%d pfn 0x%lx\n",
+               domid, dst_pfn);
         return -1;
+    }
     memset(vaddr, 0, PAGE_SIZE);
     munmap(vaddr, PAGE_SIZE);
     return 0;
